rm(list = ls())
getwd()
library(mvtnorm)
install.packages("mvtnorm")
library(mvtnorm)
source("./Distributions_to_check/tested_distribution.R")
source("./Functions/simulation_mechanism.R")
source("./Functions/additional_functions.R")
source("./Strategies_to_check/tested_strategies.R")
ls()
source("./Distributions_to_check/Liang_Example.R")
ls()
read.csv2("./Data/Liang_Density_Values.csv")
Liang_Distribution_Values   <- read.csv2("./Data/Liang_Density_Values.csv")
persp(Grid,Grid, Liang_Distribution_Values , theta = 12, phi = 30)
Grid 				<- seq(-2, 12, by=.2)
persp(Grid,Grid, Liang_Distribution_Values , theta = 12, phi = 30)
Liang_Distribution_Values   <- as.metrix(read.csv2("./Data/Liang_Density_Values.csv")	)
persp(Grid,Grid, Liang_Distribution_Values , theta = 12, phi = 30)
persp(Grid,Grid, Liang_Distribution_Values , theta = 12, phi = 30)
G <- function()
{
return(
SIMULATION(
Liang_No_of_Chains,
100,	# No of Steps of the algorithm
Liang_Problem_Dimension,
Liang_Initial_Points,
LIANG_TARGET_DENSITY,
STRATEGY_THREE,
EASY_METRIC,
Liang_Proposals_Covariance_Choleskised_Enlisted,
Liang_Inverse_Temperatures
)
)
}
M <- G()
M
ls()
Liang_Distribution_Values
Grid 				<- seq(-2, 12, by=.2)
persp(Grid,Grid, Liang_Distribution_Values , theta = 12, phi = 30)
class(Liang_Distribution_Values)
Liang_Distribution_Values   <- as.matrix(read.csv2("./Data/Liang_Density_Values.csv")	)
class(Liang_Distribution_Values)
persp(Grid,Grid, Liang_Distribution_Values , theta = 12, phi = 30)
persp(Grid,Grid, Liang_Distribution_Values , theta = 12, phi = 30)
persp(Grid,Grid, Liang_Distribution_Values , theta = 12, phi = 30)
